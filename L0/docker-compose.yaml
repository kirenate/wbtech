version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: wb_postgres
    environment:
      POSTGRES_DB: wb_db
      POSTGRES_USER: wb_user
      POSTGRES_PASSWORD: wb_password
    ports:
      - "5432:5432"
    volumes:
      - .data/pg:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U effective_mobile_user -d effective_mobile_db" ]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ".env:/.env"
    ports:
      - "8080:8080"

  kafka:
    image: bitnami/kafka:4.0.0
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_ADVERTISED_HOST_NAME=127.0.0.1
      - KAFKA_CREATE_TOPICS="events"
      - KAFKA_CLUSTER_ID=abcdefghijklmnopqrstuv
    ports:
      - "9092:9092"
      - "9093:9093"
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:master
    ports:
      - "8082:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=dev-cluster
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092,kafka:9093
      - DYNAMIC_CONFIG_ENABLED=true